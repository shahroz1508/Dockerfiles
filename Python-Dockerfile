# Dockerfile (multi-staged)
# Stage 1: build / install dependencies
FROM python:3.10-slim as builder

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

WORKDIR /app

# Install build deps
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    gcc \
 && rm -rf /var/lib/apt/lists/*

# Copy only requirements if present to leverage Docker cache
COPY requirements.txt /app/requirements.txt
RUN pip install --upgrade pip setuptools wheel
RUN pip install --no-cache-dir -r /app/requirements.txt

# Stage 2: runtime
FROM python:3.10-slim

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

# Create non-root user
RUN useradd --create-home --shell /bin/bash appuser

WORKDIR /app

# Install bash for process orchestration in workers container
RUN apt-get update && apt-get install -y --no-install-recommends bash \
 && rm -rf /var/lib/apt/lists/*

# Copy installed packages from builder
COPY --from=builder /usr/local/lib/python3.10/site-packages /usr/local/lib/python3.10/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy application code
COPY . /app

# Expose the port configured by settings (default 8000)
EXPOSE 8000

# Run as non-root user
#USER appuser

# Allow configuring worker count at runtime
ENV WORKERS=8

# Entrypoint: use Gunicorn with Uvicorn workers for production reliability
# Use sh -c so we can interpolate $WORKERS at runtime
CMD ["sh", "-c", "gunicorn -k uvicorn.workers.UvicornWorker api.restapi:app --bind 0.0.0.0:8000 --workers ${WORKERS} --log-level info"]


Can you please explain it in detail
